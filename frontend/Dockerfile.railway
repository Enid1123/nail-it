# 簡化版 Dockerfile，減少潛在問題
# ===== 第一階段：建置應用 =====
FROM node:18-alpine AS builder

# 基本環境設置
WORKDIR /app

# 複製所有文件
COPY . .

# 安裝依賴並構建
RUN npm install
RUN npm run build

# ===== 第二階段：部署靜態檔案 =====
FROM nginx:alpine

# 安裝 envsubst 工具，用於環境變量替換
RUN apk add --no-cache bash gettext

# 複製建置完成的檔案到 nginx 的公開資料夾
COPY --from=builder /app/dist /usr/share/nginx/html

# 複製 nginx 配置模板
COPY ./nginx.conf /etc/nginx/templates/default.conf.template

# 創建啟動腳本
RUN echo '#!/bin/bash\n\
# 設置默認的後端 API URL，如果環境變量不存在\n\
export BACKEND_API_URL=${BACKEND_API_URL:-http://backend:3000}\n\
\n\
# 使用 envsubst 替換模板中的環境變量\n\
envsubst "\${BACKEND_API_URL}" < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf\n\
\n\
# 啟動 nginx\n\
nginx -g "daemon off;"' > /docker-entrypoint.sh

# 賦予啟動腳本執行權限
RUN chmod +x /docker-entrypoint.sh

EXPOSE 80
CMD ["/docker-entrypoint.sh"]
