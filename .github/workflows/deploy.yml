name: Deploy to Railway

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
    types: [ opened, synchronize, reopened, closed ]

jobs:
  build-and-deploy:
    if: (github.event_name == 'push') || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      # 這一步是必要的，因為我們在Railway CLI容器中運行，但仍然需要Docker來構建和推送映像
      - name: Set up Docker
        run: |
          apt-get update
          apt-get install -y docker.io
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Test Docker Hub Authentication
        run: |
          echo "Testing Docker Hub authentication..."
          docker info
          echo "Authentication successful!"
      
      - name: Get Version
        id: get_version
        run: |
          PR_NUMBER=${{ github.event.pull_request.number || 'main' }}
          SHA=$(git rev-parse --short HEAD)
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          echo "VERSION=v-${PR_NUMBER:-main}-${SHA}-${TIMESTAMP}" >> $GITHUB_ENV
          echo "VERSION_TAG=${{ env.VERSION }}" >> $GITHUB_OUTPUT
      
      # 前端映像建置和推送
      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          # 禁用緩存，確保每次都使用最新代碼
          no-cache: true
          tags: |
            yunn0123/nail-it-frontend:latest
            yunn0123/nail-it-frontend:${{ env.VERSION }}
          build-args: |
            GITHUB_SHA=${{ github.sha }}
            VERSION=${{ env.VERSION }}
            ENVIRONMENT=${{ github.event_name == 'pull_request' && 'pr' || 'production' }}
            BUILD_DATE=$(date +%Y%m%d%H%M%S)
            # Supabase相關參數 - 目前先註釋掉
            # SUPABASE_URL=${{ secrets.SUPABASE_URL }}
            # SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}
      
      # 後端映像建置和推送 - 暫時註釋掉以僅測試前端
      # - name: Build and Push Backend Image
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: ./backend
      #     file: ./backend/Dockerfile
      #     push: true
      #     tags: |
      #       yunn0123/nail-it-backend:latest
      #       yunn0123/nail-it-backend:${{ env.VERSION }}
      #     build-args: |
      #       GITHUB_SHA=${{ github.sha }}
      #       VERSION=${{ env.VERSION }}
      #       ENVIRONMENT=${{ github.event_name == 'pull_request' && 'pr' || 'production' }}
      #       # Supabase相關參數 - 目前先註釋掉
      #       # SUPABASE_URL=${{ secrets.SUPABASE_URL }}
      #       # SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}
      
      - name: Install Railway CLI
        run: npm install -g @railway/cli
      
      - name: Deploy to Railway
        run: |
          # 設置環境變數 - 設置版本號和構建日期
          echo "Setting VERSION=${{ env.VERSION }}"
          # 使用服務ID和環境變數直接部署，符合Railway最佳實踐
          echo "Deploying to Railway..."
          export CI=true
          railway up --service=nail-it-app --detach
          
          # 等待部署完成
          echo "Waiting for deployment to complete..."
          railway service list --json | jq -r '.[].deployments[0].status'
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
  
  cleanup-pr:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Install Railway CLI
        run: npm install -g @railway/cli
      
      - name: Cleanup PR Environment
        run: |
          # 使用Railway CLI刪除PR環境
          PR_NUMBER=${{ github.event.pull_request.number }}
          echo "Cleaning up PR #${PR_NUMBER} environment"
          
          # 使用服務ID直接操作
          export CI=true
          # 目前先註釋掉，需要時可以啟用
          # railway service delete --confirm --service=nail-it-app-pr-${PR_NUMBER}
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
